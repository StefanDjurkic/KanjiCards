// scripts/generateDeckManifest.js
const fs   = require('fs');
const path = require('path');

(() => {
  const kanjiDir = path.resolve(__dirname, '../assets/kanji');
  const hiraDir  = path.resolve(__dirname, '../assets/hiragana');
  const outFile  = path.resolve(__dirname, '../src/deck.ts');

  console.log('🔍 Scanning:', kanjiDir);
  console.log('↳', fs.readdirSync(kanjiDir).filter(f => f.toLowerCase().endsWith('.png')));
  console.log('🔍 Scanning:', hiraDir);
  console.log('↳', fs.readdirSync(hiraDir).filter(f => f.toLowerCase().endsWith('.png')));

  const kanjiFiles = fs.readdirSync(kanjiDir)
    .filter(f => f.toLowerCase().endsWith('.png'));

  const entries = kanjiFiles.map(fn => {
    const base    = path.basename(fn, '.png');
    const target  = `${base.toLowerCase()}.png`;
    const hiraList = fs.readdirSync(hiraDir).map(f => f.toLowerCase());
    const hasHira = hiraList.includes(target);

    console.log(`  • ${fn} → looking for "${target}" → ${hasHira ? 'FOUND' : 'MISSING'}`);

    return `  {
    kanjiImage:    require('../assets/kanji/${fn}'),
    hiraganaImage: ${hasHira ? `require('../assets/hiragana/${base}.png')` : 'null'},
    romajiText:    '${base}'
  }`;
  });

  const content = `// AUTO-GENERATED by scripts/generateDeckManifest.js\n\nexport const deck = [\n${entries.join(',\n')}\n];\n`;
  fs.writeFileSync(outFile, content, 'utf8');
  console.log(`✅ deck.ts written with ${entries.length} cards`);
})();
